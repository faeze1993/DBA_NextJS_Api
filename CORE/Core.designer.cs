#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CORE
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBA")]
	public partial class CoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArticleFile(ArticleFile instance);
    partial void UpdateArticleFile(ArticleFile instance);
    partial void DeleteArticleFile(ArticleFile instance);
    partial void InsertArticleType(ArticleType instance);
    partial void UpdateArticleType(ArticleType instance);
    partial void DeleteArticleType(ArticleType instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    partial void InsertPanelCustomValue(PanelCustomValue instance);
    partial void UpdatePanelCustomValue(PanelCustomValue instance);
    partial void DeletePanelCustomValue(PanelCustomValue instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertConectUs(ConectUs instance);
    partial void UpdateConectUs(ConectUs instance);
    partial void DeleteConectUs(ConectUs instance);
    partial void InsertPanelMenu(PanelMenu instance);
    partial void UpdatePanelMenu(PanelMenu instance);
    partial void DeletePanelMenu(PanelMenu instance);
    partial void InsertPeople(People instance);
    partial void UpdatePeople(People instance);
    partial void DeletePeople(People instance);
    partial void InsertTicket(Ticket instance);
    partial void UpdateTicket(Ticket instance);
    partial void DeleteTicket(Ticket instance);
    partial void InsertUserFile(UserFile instance);
    partial void UpdateUserFile(UserFile instance);
    partial void DeleteUserFile(UserFile instance);
    partial void InsertPanelMenuRole(PanelMenuRole instance);
    partial void UpdatePanelMenuRole(PanelMenuRole instance);
    partial void DeletePanelMenuRole(PanelMenuRole instance);
    partial void InsertSlider(Slider instance);
    partial void UpdateSlider(Slider instance);
    partial void DeleteSlider(Slider instance);
    partial void InsertUserViewHistory(UserViewHistory instance);
    partial void UpdateUserViewHistory(UserViewHistory instance);
    partial void DeleteUserViewHistory(UserViewHistory instance);
    partial void InsertArticleTree(ArticleTree instance);
    partial void UpdateArticleTree(ArticleTree instance);
    partial void DeleteArticleTree(ArticleTree instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertProductRequest(ProductRequest instance);
    partial void UpdateProductRequest(ProductRequest instance);
    partial void DeleteProductRequest(ProductRequest instance);
    #endregion
		
		public CoreDataContext() : 
				base(global::CORE.Properties.Settings.Default.DBAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ArticleFile> ArticleFiles
		{
			get
			{
				return this.GetTable<ArticleFile>();
			}
		}
		
		public System.Data.Linq.Table<ArticleType> ArticleTypes
		{
			get
			{
				return this.GetTable<ArticleType>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
		
		public System.Data.Linq.Table<PanelCustomValue> PanelCustomValues
		{
			get
			{
				return this.GetTable<PanelCustomValue>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<ConectUs> ConectUs
		{
			get
			{
				return this.GetTable<ConectUs>();
			}
		}
		
		public System.Data.Linq.Table<PanelMenu> PanelMenus
		{
			get
			{
				return this.GetTable<PanelMenu>();
			}
		}
		
		public System.Data.Linq.Table<FilesView> FilesViews
		{
			get
			{
				return this.GetTable<FilesView>();
			}
		}
		
		public System.Data.Linq.Table<People> Peoples
		{
			get
			{
				return this.GetTable<People>();
			}
		}
		
		public System.Data.Linq.Table<Ticket> Tickets
		{
			get
			{
				return this.GetTable<Ticket>();
			}
		}
		
		public System.Data.Linq.Table<UserFile> UserFiles
		{
			get
			{
				return this.GetTable<UserFile>();
			}
		}
		
		public System.Data.Linq.Table<PanelMenuRole> PanelMenuRoles
		{
			get
			{
				return this.GetTable<PanelMenuRole>();
			}
		}
		
		public System.Data.Linq.Table<Slider> Sliders
		{
			get
			{
				return this.GetTable<Slider>();
			}
		}
		
		public System.Data.Linq.Table<UserViewHistory> UserViewHistories
		{
			get
			{
				return this.GetTable<UserViewHistory>();
			}
		}
		
		public System.Data.Linq.Table<ArticleTree> ArticleTrees
		{
			get
			{
				return this.GetTable<ArticleTree>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<ProductRequest> ProductRequests
		{
			get
			{
				return this.GetTable<ProductRequest>();
			}
		}
		
		public System.Data.Linq.Table<ViewAllTree> ViewAllTrees
		{
			get
			{
				return this.GetTable<ViewAllTree>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveFiles")]
		public int SaveFiles([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> stream_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string filename, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary file_stream, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirPath", DbType="NVarChar(2000)")] string dirPath)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stream_id, filename, file_stream, dirPath);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetChiledNode")]
		public ISingleResult<GetChiledNodeResult> GetChiledNode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StreamID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> streamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), streamID);
			return ((ISingleResult<GetChiledNodeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetFiesAncestor")]
		public ISingleResult<GetFiesAncestorResult> GetFiesAncestor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Stream_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> stream_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stream_ID);
			return ((ISingleResult<GetFiesAncestorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Clone_Article")]
		public ISingleResult<Clone_ArticleResult> Clone_Article([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArticleID", DbType="Int")] System.Nullable<int> articleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_AuthorID", DbType="Int")] System.Nullable<int> user_AuthorID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), articleID, user_AuthorID);
			return ((ISingleResult<Clone_ArticleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetArticleAncestor")]
		public ISingleResult<GetArticleAncestorResult> GetArticleAncestor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArticleID", DbType="Int")] System.Nullable<int> articleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), articleID);
			return ((ISingleResult<GetArticleAncestorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CommentPagination")]
		public ISingleResult<CommentPaginationResult> CommentPagination([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArticleID", DbType="Int")] System.Nullable<int> articleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormStep", DbType="Int")] System.Nullable<int> formStep, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StepNumber", DbType="Int")] System.Nullable<int> stepNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), articleID, formStep, stepNumber, userID);
			return ((ISingleResult<CommentPaginationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ArticleSearch", IsComposable=true)]
		public IQueryable<ArticleSearchResult> ArticleSearch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="VarChar(250)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Top", DbType="Int")] System.Nullable<int> top)
		{
			return this.CreateMethodCallQuery<ArticleSearchResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, top);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetContextInfo")]
		public int SetContextInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="VarChar(128)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ArticlePagination")]
		public ISingleResult<ArticlePaginationResult> ArticlePagination([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormStep", DbType="Int")] System.Nullable<int> formStep, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StepNumber", DbType="Int")] System.Nullable<int> stepNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Article_ParentID", DbType="Int")] System.Nullable<int> article_ParentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), formStep, stepNumber, userID, article_ParentID);
			return ((ISingleResult<ArticlePaginationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetNextPreArticle")]
		public int SetNextPreArticle([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Article_PreID", DbType="Int")] System.Nullable<int> article_PreID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Article_NextID", DbType="Int")] System.Nullable<int> article_NextID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, article_PreID, article_NextID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleFiles")]
	public partial class ArticleFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ArticleID;
		
		private System.Guid _FilesID;
		
		private string _LinkAddRess;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArticleIDChanging(int value);
    partial void OnArticleIDChanged();
    partial void OnFilesIDChanging(System.Guid value);
    partial void OnFilesIDChanged();
    partial void OnLinkAddRessChanging(string value);
    partial void OnLinkAddRessChanged();
    #endregion
		
		public ArticleFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="Int NOT NULL")]
		public int ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					this.OnArticleIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleID = value;
					this.SendPropertyChanged("ArticleID");
					this.OnArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilesID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FilesID
		{
			get
			{
				return this._FilesID;
			}
			set
			{
				if ((this._FilesID != value))
				{
					this.OnFilesIDChanging(value);
					this.SendPropertyChanging();
					this._FilesID = value;
					this.SendPropertyChanged("FilesID");
					this.OnFilesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkAddRess", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LinkAddRess
		{
			get
			{
				return this._LinkAddRess;
			}
			set
			{
				if ((this._LinkAddRess != value))
				{
					this.OnLinkAddRessChanging(value);
					this.SendPropertyChanging();
					this._LinkAddRess = value;
					this.SendPropertyChanged("LinkAddRess");
					this.OnLinkAddRessChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleType")]
	public partial class ArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private string _LatinName;
		
		private EntitySet<Article> _Articles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatinNameChanging(string value);
    partial void OnLatinNameChanged();
    #endregion
		
		public ArticleType()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinName", DbType="VarChar(50)")]
		public string LatinName
		{
			get
			{
				return this._LatinName;
			}
			set
			{
				if ((this._LatinName != value))
				{
					this.OnLatinNameChanging(value);
					this.SendPropertyChanging();
					this._LatinName = value;
					this.SendPropertyChanged("LatinName");
					this.OnLatinNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleType_Article", Storage="_Articles", ThisKey="ID", OtherKey="ArticleTypeID")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleType = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ArticleID;
		
		private int _UserID;
		
		private System.DateTime _Date;
		
		private string _Description;
		
		private System.Nullable<int> _Comment_ReplyID;
		
		private bool _IsConfirm;
		
		private bool _IsReplyByAdmin;
		
		private EntitySet<Comment> _Comments;
		
		private EntityRef<Comment> _Comment1;
		
		private EntityRef<User> _User;
		
		private EntityRef<Article> _Article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArticleIDChanging(int value);
    partial void OnArticleIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnComment_ReplyIDChanging(System.Nullable<int> value);
    partial void OnComment_ReplyIDChanged();
    partial void OnIsConfirmChanging(bool value);
    partial void OnIsConfirmChanged();
    partial void OnIsReplyByAdminChanging(bool value);
    partial void OnIsReplyByAdminChanged();
    #endregion
		
		public Comment()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Comment1 = default(EntityRef<Comment>);
			this._User = default(EntityRef<User>);
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="Int NOT NULL")]
		public int ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleID = value;
					this.SendPropertyChanged("ArticleID");
					this.OnArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment_ReplyID", DbType="Int")]
		public System.Nullable<int> Comment_ReplyID
		{
			get
			{
				return this._Comment_ReplyID;
			}
			set
			{
				if ((this._Comment_ReplyID != value))
				{
					if (this._Comment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComment_ReplyIDChanging(value);
					this.SendPropertyChanging();
					this._Comment_ReplyID = value;
					this.SendPropertyChanged("Comment_ReplyID");
					this.OnComment_ReplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirm", DbType="Bit NOT NULL")]
		public bool IsConfirm
		{
			get
			{
				return this._IsConfirm;
			}
			set
			{
				if ((this._IsConfirm != value))
				{
					this.OnIsConfirmChanging(value);
					this.SendPropertyChanging();
					this._IsConfirm = value;
					this.SendPropertyChanged("IsConfirm");
					this.OnIsConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplyByAdmin", DbType="Bit NOT NULL")]
		public bool IsReplyByAdmin
		{
			get
			{
				return this._IsReplyByAdmin;
			}
			set
			{
				if ((this._IsReplyByAdmin != value))
				{
					this.OnIsReplyByAdminChanging(value);
					this.SendPropertyChanging();
					this._IsReplyByAdmin = value;
					this.SendPropertyChanged("IsReplyByAdmin");
					this.OnIsReplyByAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_Comment", Storage="_Comments", ThisKey="ID", OtherKey="Comment_ReplyID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_Comment", Storage="_Comment1", ThisKey="Comment_ReplyID", OtherKey="ID", IsForeignKey=true)]
		public Comment Comment1
		{
			get
			{
				return this._Comment1.Entity;
			}
			set
			{
				Comment previousValue = this._Comment1.Entity;
				if (((previousValue != value) 
							|| (this._Comment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comment1.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Comment1.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._Comment_ReplyID = value.ID;
					}
					else
					{
						this._Comment_ReplyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Comment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Comment", Storage="_Article", ThisKey="ArticleID", OtherKey="ID", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._ArticleID = value.ID;
					}
					else
					{
						this._ArticleID = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Comment1 = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Comment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gender")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private string _LatinName;
		
		private EntitySet<People> _Peoples;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatinNameChanging(string value);
    partial void OnLatinNameChanged();
    #endregion
		
		public Gender()
		{
			this._Peoples = new EntitySet<People>(new Action<People>(this.attach_Peoples), new Action<People>(this.detach_Peoples));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinName", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string LatinName
		{
			get
			{
				return this._LatinName;
			}
			set
			{
				if ((this._LatinName != value))
				{
					this.OnLatinNameChanging(value);
					this.SendPropertyChanging();
					this._LatinName = value;
					this.SendPropertyChanged("LatinName");
					this.OnLatinNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_People", Storage="_Peoples", ThisKey="ID", OtherKey="GenderID")]
		public EntitySet<People> Peoples
		{
			get
			{
				return this._Peoples;
			}
			set
			{
				this._Peoples.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Peoples(People entity)
		{
			this.SendPropertyChanging();
			entity.Gender = this;
		}
		
		private void detach_Peoples(People entity)
		{
			this.SendPropertyChanging();
			entity.Gender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PanelCustomValue")]
	public partial class PanelCustomValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Name;
		
		private string _LatinName;
		
		private string _Type;
		
		private string _Value;
		
		private System.Nullable<System.Guid> _Files_ImageID;
		
		private string _Section;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatinNameChanging(string value);
    partial void OnLatinNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnFiles_ImageIDChanging(System.Nullable<System.Guid> value);
    partial void OnFiles_ImageIDChanged();
    partial void OnSectionChanging(string value);
    partial void OnSectionChanged();
    #endregion
		
		public PanelCustomValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LatinName
		{
			get
			{
				return this._LatinName;
			}
			set
			{
				if ((this._LatinName != value))
				{
					this.OnLatinNameChanging(value);
					this.SendPropertyChanging();
					this._LatinName = value;
					this.SendPropertyChanged("LatinName");
					this.OnLatinNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Files_ImageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Files_ImageID
		{
			get
			{
				return this._Files_ImageID;
			}
			set
			{
				if ((this._Files_ImageID != value))
				{
					this.OnFiles_ImageIDChanging(value);
					this.SendPropertyChanging();
					this._Files_ImageID = value;
					this.SendPropertyChanged("Files_ImageID");
					this.OnFiles_ImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="VarChar(255)")]
		public string Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._Section = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<PanelMenu> _PanelMenus;
		
		private EntitySet<PanelMenuRole> _PanelMenuRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._PanelMenus = new EntitySet<PanelMenu>(new Action<PanelMenu>(this.attach_PanelMenus), new Action<PanelMenu>(this.detach_PanelMenus));
			this._PanelMenuRoles = new EntitySet<PanelMenuRole>(new Action<PanelMenuRole>(this.attach_PanelMenuRoles), new Action<PanelMenuRole>(this.detach_PanelMenuRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PanelMenu", Storage="_PanelMenus", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<PanelMenu> PanelMenus
		{
			get
			{
				return this._PanelMenus;
			}
			set
			{
				this._PanelMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PanelMenuRole", Storage="_PanelMenuRoles", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<PanelMenuRole> PanelMenuRoles
		{
			get
			{
				return this._PanelMenuRoles;
			}
			set
			{
				this._PanelMenuRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_PanelMenus(PanelMenu entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_PanelMenus(PanelMenu entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_PanelMenuRoles(PanelMenuRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_PanelMenuRoles(PanelMenuRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private System.Nullable<System.DateTime> _PasswordExpirationDate;
		
		private System.Nullable<System.DateTime> _LastPasswordChangedDate;
		
		private System.DateTime _CreationDate;
		
		private bool _IsOnLine;
		
		private bool _IsEnabled;
		
		private System.Nullable<System.DateTime> _LastEnabledDate;
		
		private System.Nullable<short> _FailedPasswordAttemptCount;
		
		private bool _ChangedPermission;
		
		private System.Nullable<System.DateTime> _FinishLockDatetime;
		
		private string _IPAddress;
		
		private System.Nullable<int> _VerificationCode;
		
		private System.Nullable<System.DateTime> _ExpireTimeVerificationCode;
		
		private bool _HasVerify;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntitySet<UserFile> _UserFiles;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<Article> _Articles1;
		
		private EntityRef<People> _People;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnPasswordExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordExpirationDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnIsOnLineChanging(bool value);
    partial void OnIsOnLineChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnLastEnabledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEnabledDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(System.Nullable<short> value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnChangedPermissionChanging(bool value);
    partial void OnChangedPermissionChanged();
    partial void OnFinishLockDatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishLockDatetimeChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnVerificationCodeChanging(System.Nullable<int> value);
    partial void OnVerificationCodeChanged();
    partial void OnExpireTimeVerificationCodeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireTimeVerificationCodeChanged();
    partial void OnHasVerifyChanging(bool value);
    partial void OnHasVerifyChanged();
    #endregion
		
		public User()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._UserFiles = new EntitySet<UserFile>(new Action<UserFile>(this.attach_UserFiles), new Action<UserFile>(this.detach_UserFiles));
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._Articles1 = new EntitySet<Article>(new Action<Article>(this.attach_Articles1), new Action<Article>(this.detach_Articles1));
			this._People = default(EntityRef<People>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordExpirationDate
		{
			get
			{
				return this._PasswordExpirationDate;
			}
			set
			{
				if ((this._PasswordExpirationDate != value))
				{
					this.OnPasswordExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordExpirationDate = value;
					this.SendPropertyChanged("PasswordExpirationDate");
					this.OnPasswordExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnLine", DbType="Bit NOT NULL")]
		public bool IsOnLine
		{
			get
			{
				return this._IsOnLine;
			}
			set
			{
				if ((this._IsOnLine != value))
				{
					this.OnIsOnLineChanging(value);
					this.SendPropertyChanging();
					this._IsOnLine = value;
					this.SendPropertyChanged("IsOnLine");
					this.OnIsOnLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEnabledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEnabledDate
		{
			get
			{
				return this._LastEnabledDate;
			}
			set
			{
				if ((this._LastEnabledDate != value))
				{
					this.OnLastEnabledDateChanging(value);
					this.SendPropertyChanging();
					this._LastEnabledDate = value;
					this.SendPropertyChanged("LastEnabledDate");
					this.OnLastEnabledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="SmallInt")]
		public System.Nullable<short> FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedPermission", DbType="Bit NOT NULL")]
		public bool ChangedPermission
		{
			get
			{
				return this._ChangedPermission;
			}
			set
			{
				if ((this._ChangedPermission != value))
				{
					this.OnChangedPermissionChanging(value);
					this.SendPropertyChanging();
					this._ChangedPermission = value;
					this.SendPropertyChanged("ChangedPermission");
					this.OnChangedPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishLockDatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishLockDatetime
		{
			get
			{
				return this._FinishLockDatetime;
			}
			set
			{
				if ((this._FinishLockDatetime != value))
				{
					this.OnFinishLockDatetimeChanging(value);
					this.SendPropertyChanging();
					this._FinishLockDatetime = value;
					this.SendPropertyChanged("FinishLockDatetime");
					this.OnFinishLockDatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(30)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationCode", DbType="Int")]
		public System.Nullable<int> VerificationCode
		{
			get
			{
				return this._VerificationCode;
			}
			set
			{
				if ((this._VerificationCode != value))
				{
					this.OnVerificationCodeChanging(value);
					this.SendPropertyChanging();
					this._VerificationCode = value;
					this.SendPropertyChanged("VerificationCode");
					this.OnVerificationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireTimeVerificationCode", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireTimeVerificationCode
		{
			get
			{
				return this._ExpireTimeVerificationCode;
			}
			set
			{
				if ((this._ExpireTimeVerificationCode != value))
				{
					this.OnExpireTimeVerificationCodeChanging(value);
					this.SendPropertyChanging();
					this._ExpireTimeVerificationCode = value;
					this.SendPropertyChanged("ExpireTimeVerificationCode");
					this.OnExpireTimeVerificationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasVerify", DbType="Bit NOT NULL")]
		public bool HasVerify
		{
			get
			{
				return this._HasVerify;
			}
			set
			{
				if ((this._HasVerify != value))
				{
					this.OnHasVerifyChanging(value);
					this.SendPropertyChanging();
					this._HasVerify = value;
					this.SendPropertyChanged("HasVerify");
					this.OnHasVerifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoles", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_Tickets", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserFile", Storage="_UserFiles", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserFile> UserFiles
		{
			get
			{
				return this._UserFiles;
			}
			set
			{
				this._UserFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Article", Storage="_Articles", ThisKey="ID", OtherKey="User_AuthorID")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Article1", Storage="_Articles1", ThisKey="ID", OtherKey="User_LastEditID")]
		public EntitySet<Article> Articles1
		{
			get
			{
				return this._Articles1;
			}
			set
			{
				this._Articles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_User", Storage="_People", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.User = null;
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.User = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserFiles(UserFile entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserFiles(UserFile entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Articles1(Article entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Articles1(Article entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoles")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private byte _RoleID;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(byte value);
    partial void OnRoleIDChanged();
    #endregion
		
		public UserRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(byte);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConectUs")]
	public partial class ConectUs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FullName;
		
		private string _Email;
		
		private string _Subject;
		
		private string _Description;
		
		private System.DateTime _Date;
		
		private bool _IsReplied;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIsRepliedChanging(bool value);
    partial void OnIsRepliedChanged();
    #endregion
		
		public ConectUs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplied", DbType="Bit NOT NULL")]
		public bool IsReplied
		{
			get
			{
				return this._IsReplied;
			}
			set
			{
				if ((this._IsReplied != value))
				{
					this.OnIsRepliedChanging(value);
					this.SendPropertyChanging();
					this._IsReplied = value;
					this.SendPropertyChanged("IsReplied");
					this.OnIsRepliedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PanelMenu")]
	public partial class PanelMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Name;
		
		private string _NavigateUrl;
		
		private byte _RoleID;
		
		private System.Nullable<System.Guid> _Files_IconID;
		
		private EntitySet<PanelMenuRole> _PanelMenuRoles;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNavigateUrlChanging(string value);
    partial void OnNavigateUrlChanged();
    partial void OnRoleIDChanging(byte value);
    partial void OnRoleIDChanged();
    partial void OnFiles_IconIDChanging(System.Nullable<System.Guid> value);
    partial void OnFiles_IconIDChanged();
    #endregion
		
		public PanelMenu()
		{
			this._PanelMenuRoles = new EntitySet<PanelMenuRole>(new Action<PanelMenuRole>(this.attach_PanelMenuRoles), new Action<PanelMenuRole>(this.detach_PanelMenuRoles));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavigateUrl", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string NavigateUrl
		{
			get
			{
				return this._NavigateUrl;
			}
			set
			{
				if ((this._NavigateUrl != value))
				{
					this.OnNavigateUrlChanging(value);
					this.SendPropertyChanging();
					this._NavigateUrl = value;
					this.SendPropertyChanged("NavigateUrl");
					this.OnNavigateUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="TinyInt NOT NULL")]
		public byte RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Files_IconID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Files_IconID
		{
			get
			{
				return this._Files_IconID;
			}
			set
			{
				if ((this._Files_IconID != value))
				{
					this.OnFiles_IconIDChanging(value);
					this.SendPropertyChanging();
					this._Files_IconID = value;
					this.SendPropertyChanged("Files_IconID");
					this.OnFiles_IconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PanelMenu_PanelMenuRole", Storage="_PanelMenuRoles", ThisKey="ID", OtherKey="PanelMenuID")]
		public EntitySet<PanelMenuRole> PanelMenuRoles
		{
			get
			{
				return this._PanelMenuRoles;
			}
			set
			{
				this._PanelMenuRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PanelMenu", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.PanelMenus.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.PanelMenus.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(byte);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PanelMenuRoles(PanelMenuRole entity)
		{
			this.SendPropertyChanging();
			entity.PanelMenu = this;
		}
		
		private void detach_PanelMenuRoles(PanelMenuRole entity)
		{
			this.SendPropertyChanging();
			entity.PanelMenu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FilesView")]
	public partial class FilesView
	{
		
		private System.Guid _stream_id;
		
		private string _directory;
		
		private string _name;
		
		private string _file_type;
		
		private System.DateTimeOffset _creation_time;
		
		private System.Nullable<long> _cached_file_size;
		
		private bool _is_directory;
		
		public FilesView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stream_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid stream_id
		{
			get
			{
				return this._stream_id;
			}
			set
			{
				if ((this._stream_id != value))
				{
					this._stream_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directory", DbType="NVarChar(MAX)")]
		public string directory
		{
			get
			{
				return this._directory;
			}
			set
			{
				if ((this._directory != value))
				{
					this._directory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_type", DbType="NVarChar(255)")]
		public string file_type
		{
			get
			{
				return this._file_type;
			}
			set
			{
				if ((this._file_type != value))
				{
					this._file_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creation_time", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset creation_time
		{
			get
			{
				return this._creation_time;
			}
			set
			{
				if ((this._creation_time != value))
				{
					this._creation_time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cached_file_size", DbType="BigInt")]
		public System.Nullable<long> cached_file_size
		{
			get
			{
				return this._cached_file_size;
			}
			set
			{
				if ((this._cached_file_size != value))
				{
					this._cached_file_size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_directory", DbType="Bit NOT NULL")]
		public bool is_directory
		{
			get
			{
				return this._is_directory;
			}
			set
			{
				if ((this._is_directory != value))
				{
					this._is_directory = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.People")]
	public partial class People : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private long _Mobile;
		
		private System.DateTime _BirthDate;
		
		private byte _GenderID;
		
		private string _E_mail;
		
		private System.Nullable<System.Guid> _Files_ImageID;
		
		private string _Description;
		
		private EntityRef<User> _User;
		
		private EntityRef<Gender> _Gender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMobileChanging(long value);
    partial void OnMobileChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnGenderIDChanging(byte value);
    partial void OnGenderIDChanged();
    partial void OnE_mailChanging(string value);
    partial void OnE_mailChanged();
    partial void OnFiles_ImageIDChanging(System.Nullable<System.Guid> value);
    partial void OnFiles_ImageIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public People()
		{
			this._User = default(EntityRef<User>);
			this._Gender = default(EntityRef<Gender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="BigInt NOT NULL")]
		public long Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="TinyInt NOT NULL")]
		public byte GenderID
		{
			get
			{
				return this._GenderID;
			}
			set
			{
				if ((this._GenderID != value))
				{
					if (this._Gender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderIDChanging(value);
					this.SendPropertyChanging();
					this._GenderID = value;
					this.SendPropertyChanged("GenderID");
					this.OnGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_mail", DbType="VarChar(200)")]
		public string E_mail
		{
			get
			{
				return this._E_mail;
			}
			set
			{
				if ((this._E_mail != value))
				{
					this.OnE_mailChanging(value);
					this.SendPropertyChanging();
					this._E_mail = value;
					this.SendPropertyChanged("E_mail");
					this.OnE_mailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Files_ImageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Files_ImageID
		{
			get
			{
				return this._Files_ImageID;
			}
			set
			{
				if ((this._Files_ImageID != value))
				{
					this.OnFiles_ImageIDChanging(value);
					this.SendPropertyChanging();
					this._Files_ImageID = value;
					this.SendPropertyChanged("Files_ImageID");
					this.OnFiles_ImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_User", Storage="_User", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.People = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.People = this;
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_People", Storage="_Gender", ThisKey="GenderID", OtherKey="ID", IsForeignKey=true)]
		public Gender Gender
		{
			get
			{
				return this._Gender.Entity;
			}
			set
			{
				Gender previousValue = this._Gender.Entity;
				if (((previousValue != value) 
							|| (this._Gender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gender.Entity = null;
						previousValue.Peoples.Remove(this);
					}
					this._Gender.Entity = value;
					if ((value != null))
					{
						value.Peoples.Add(this);
						this._GenderID = value.ID;
					}
					else
					{
						this._GenderID = default(byte);
					}
					this.SendPropertyChanged("Gender");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket")]
	public partial class Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserId;
		
		private string _Subject;
		
		private string _Description;
		
		private System.DateTime _Date;
		
		private bool _IsReplied;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIsRepliedChanging(bool value);
    partial void OnIsRepliedChanged();
    #endregion
		
		public Ticket()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplied", DbType="Bit NOT NULL")]
		public bool IsReplied
		{
			get
			{
				return this._IsReplied;
			}
			set
			{
				if ((this._IsReplied != value))
				{
					this.OnIsRepliedChanging(value);
					this.SendPropertyChanging();
					this._IsReplied = value;
					this.SendPropertyChanged("IsReplied");
					this.OnIsRepliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserFiles")]
	public partial class UserFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private System.Guid _FilesID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFilesIDChanging(System.Guid value);
    partial void OnFilesIDChanged();
    #endregion
		
		public UserFile()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilesID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FilesID
		{
			get
			{
				return this._FilesID;
			}
			set
			{
				if ((this._FilesID != value))
				{
					this.OnFilesIDChanging(value);
					this.SendPropertyChanging();
					this._FilesID = value;
					this.SendPropertyChanged("FilesID");
					this.OnFilesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserFile", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserFiles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserFiles.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PanelMenuRoles")]
	public partial class PanelMenuRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _RoleID;
		
		private short _PanelMenuID;
		
		private EntityRef<PanelMenu> _PanelMenu;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(byte value);
    partial void OnRoleIDChanged();
    partial void OnPanelMenuIDChanging(short value);
    partial void OnPanelMenuIDChanged();
    #endregion
		
		public PanelMenuRole()
		{
			this._PanelMenu = default(EntityRef<PanelMenu>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PanelMenuID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short PanelMenuID
		{
			get
			{
				return this._PanelMenuID;
			}
			set
			{
				if ((this._PanelMenuID != value))
				{
					if (this._PanelMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPanelMenuIDChanging(value);
					this.SendPropertyChanging();
					this._PanelMenuID = value;
					this.SendPropertyChanged("PanelMenuID");
					this.OnPanelMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PanelMenu_PanelMenuRole", Storage="_PanelMenu", ThisKey="PanelMenuID", OtherKey="ID", IsForeignKey=true)]
		public PanelMenu PanelMenu
		{
			get
			{
				return this._PanelMenu.Entity;
			}
			set
			{
				PanelMenu previousValue = this._PanelMenu.Entity;
				if (((previousValue != value) 
							|| (this._PanelMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PanelMenu.Entity = null;
						previousValue.PanelMenuRoles.Remove(this);
					}
					this._PanelMenu.Entity = value;
					if ((value != null))
					{
						value.PanelMenuRoles.Add(this);
						this._PanelMenuID = value.ID;
					}
					else
					{
						this._PanelMenuID = default(short);
					}
					this.SendPropertyChanged("PanelMenu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PanelMenuRole", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.PanelMenuRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.PanelMenuRoles.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(byte);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Slider")]
	public partial class Slider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.Guid _Files_ImageID;
		
		private string _LinkUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnFiles_ImageIDChanging(System.Guid value);
    partial void OnFiles_ImageIDChanged();
    partial void OnLinkUrlChanging(string value);
    partial void OnLinkUrlChanged();
    #endregion
		
		public Slider()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Files_ImageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Files_ImageID
		{
			get
			{
				return this._Files_ImageID;
			}
			set
			{
				if ((this._Files_ImageID != value))
				{
					this.OnFiles_ImageIDChanging(value);
					this.SendPropertyChanging();
					this._Files_ImageID = value;
					this.SendPropertyChanged("Files_ImageID");
					this.OnFiles_ImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkUrl", DbType="VarChar(MAX)")]
		public string LinkUrl
		{
			get
			{
				return this._LinkUrl;
			}
			set
			{
				if ((this._LinkUrl != value))
				{
					this.OnLinkUrlChanging(value);
					this.SendPropertyChanging();
					this._LinkUrl = value;
					this.SendPropertyChanged("LinkUrl");
					this.OnLinkUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserViewHistory")]
	public partial class UserViewHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ArticleID;
		
		private string _IP;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private EntityRef<Article> _Article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArticleIDChanging(int value);
    partial void OnArticleIDChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    #endregion
		
		public UserViewHistory()
		{
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="Int NOT NULL")]
		public int ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleID = value;
					this.SendPropertyChanged("ArticleID");
					this.OnArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="Char(15)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_UserViewHistory", Storage="_Article", ThisKey="ArticleID", OtherKey="ID", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.UserViewHistories.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.UserViewHistories.Add(this);
						this._ArticleID = value.ID;
					}
					else
					{
						this._ArticleID = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleTree")]
	public partial class ArticleTree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private bool _ID;
		
		private string _TextCompressed;
		
		private bool _IsExpire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(bool value);
    partial void OnIDChanged();
    partial void OnTextCompressedChanging(string value);
    partial void OnTextCompressedChanged();
    partial void OnIsExpireChanging(bool value);
    partial void OnIsExpireChanged();
    #endregion
		
		public ArticleTree()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextCompressed", DbType="VarChar(MAX)")]
		public string TextCompressed
		{
			get
			{
				return this._TextCompressed;
			}
			set
			{
				if ((this._TextCompressed != value))
				{
					this.OnTextCompressedChanging(value);
					this.SendPropertyChanging();
					this._TextCompressed = value;
					this.SendPropertyChanged("TextCompressed");
					this.OnTextCompressedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExpire", DbType="Bit NOT NULL")]
		public bool IsExpire
		{
			get
			{
				return this._IsExpire;
			}
			set
			{
				if ((this._IsExpire != value))
				{
					this.OnIsExpireChanging(value);
					this.SendPropertyChanging();
					this._IsExpire = value;
					this.SendPropertyChanged("IsExpire");
					this.OnIsExpireChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private bool _IsActive;
		
		private System.Guid _Files_ImageID;
		
		private string _LinkUrl;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnFiles_ImageIDChanging(System.Guid value);
    partial void OnFiles_ImageIDChanged();
    partial void OnLinkUrlChanging(string value);
    partial void OnLinkUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Files_ImageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Files_ImageID
		{
			get
			{
				return this._Files_ImageID;
			}
			set
			{
				if ((this._Files_ImageID != value))
				{
					this.OnFiles_ImageIDChanging(value);
					this.SendPropertyChanging();
					this._Files_ImageID = value;
					this.SendPropertyChanged("Files_ImageID");
					this.OnFiles_ImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkUrl", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LinkUrl
		{
			get
			{
				return this._LinkUrl;
			}
			set
			{
				if ((this._LinkUrl != value))
				{
					this.OnLinkUrlChanging(value);
					this.SendPropertyChanging();
					this._LinkUrl = value;
					this.SendPropertyChanged("LinkUrl");
					this.OnLinkUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _LatinNm;
		
		private string _Body;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<System.Guid> _Files_ImageID;
		
		private int _User_AuthorID;
		
		private byte _ArticleTypeID;
		
		private string _Summery;
		
		private string _KeyWords;
		
		private string _TechnicalSpecification;
		
		private System.DateTime _UploadDate;
		
		private System.Nullable<System.DateTime> _LastPublishDate;
		
		private bool _IsDraft;
		
		private System.Nullable<short> _TimeToRead;
		
		private System.Nullable<int> _Article_PreID;
		
		private System.Nullable<int> _Article_NextID;
		
		private System.Nullable<int> _Article_CloneID;
		
		private System.Nullable<long> _Views;
		
		private System.Nullable<int> _User_LastEditID;
		
		private string _FragmentedText;
		
		private string _Breadcrumbs;
		
		private string _Refrences;
		
		private bool _Enable;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<UserViewHistory> _UserViewHistories;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<Article> _Articles1;
		
		private EntitySet<Article> _Articles2;
		
		private EntitySet<Article> _Articles3;
		
		private EntityRef<Article> _Article1;
		
		private EntityRef<Article> _Article2;
		
		private EntityRef<Article> _Article3;
		
		private EntityRef<Article> _Article4;
		
		private EntityRef<ArticleType> _ArticleType;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatinNmChanging(string value);
    partial void OnLatinNmChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnFiles_ImageIDChanging(System.Nullable<System.Guid> value);
    partial void OnFiles_ImageIDChanged();
    partial void OnUser_AuthorIDChanging(int value);
    partial void OnUser_AuthorIDChanged();
    partial void OnArticleTypeIDChanging(byte value);
    partial void OnArticleTypeIDChanged();
    partial void OnSummeryChanging(string value);
    partial void OnSummeryChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnTechnicalSpecificationChanging(string value);
    partial void OnTechnicalSpecificationChanged();
    partial void OnUploadDateChanging(System.DateTime value);
    partial void OnUploadDateChanged();
    partial void OnLastPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPublishDateChanged();
    partial void OnIsDraftChanging(bool value);
    partial void OnIsDraftChanged();
    partial void OnTimeToReadChanging(System.Nullable<short> value);
    partial void OnTimeToReadChanged();
    partial void OnArticle_PreIDChanging(System.Nullable<int> value);
    partial void OnArticle_PreIDChanged();
    partial void OnArticle_NextIDChanging(System.Nullable<int> value);
    partial void OnArticle_NextIDChanged();
    partial void OnArticle_CloneIDChanging(System.Nullable<int> value);
    partial void OnArticle_CloneIDChanged();
    partial void OnViewsChanging(System.Nullable<long> value);
    partial void OnViewsChanged();
    partial void OnUser_LastEditIDChanging(System.Nullable<int> value);
    partial void OnUser_LastEditIDChanged();
    partial void OnFragmentedTextChanging(string value);
    partial void OnFragmentedTextChanged();
    partial void OnBreadcrumbsChanging(string value);
    partial void OnBreadcrumbsChanged();
    partial void OnRefrencesChanging(string value);
    partial void OnRefrencesChanged();
    partial void OnEnableChanging(bool value);
    partial void OnEnableChanged();
    #endregion
		
		public Article()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._UserViewHistories = new EntitySet<UserViewHistory>(new Action<UserViewHistory>(this.attach_UserViewHistories), new Action<UserViewHistory>(this.detach_UserViewHistories));
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._Articles1 = new EntitySet<Article>(new Action<Article>(this.attach_Articles1), new Action<Article>(this.detach_Articles1));
			this._Articles2 = new EntitySet<Article>(new Action<Article>(this.attach_Articles2), new Action<Article>(this.detach_Articles2));
			this._Articles3 = new EntitySet<Article>(new Action<Article>(this.attach_Articles3), new Action<Article>(this.detach_Articles3));
			this._Article1 = default(EntityRef<Article>);
			this._Article2 = default(EntityRef<Article>);
			this._Article3 = default(EntityRef<Article>);
			this._Article4 = default(EntityRef<Article>);
			this._ArticleType = default(EntityRef<ArticleType>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinNm", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string LatinNm
		{
			get
			{
				return this._LatinNm;
			}
			set
			{
				if ((this._LatinNm != value))
				{
					this.OnLatinNmChanging(value);
					this.SendPropertyChanging();
					this._LatinNm = value;
					this.SendPropertyChanged("LatinNm");
					this.OnLatinNmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="VarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Article1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Files_ImageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Files_ImageID
		{
			get
			{
				return this._Files_ImageID;
			}
			set
			{
				if ((this._Files_ImageID != value))
				{
					this.OnFiles_ImageIDChanging(value);
					this.SendPropertyChanging();
					this._Files_ImageID = value;
					this.SendPropertyChanged("Files_ImageID");
					this.OnFiles_ImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_AuthorID", DbType="Int NOT NULL")]
		public int User_AuthorID
		{
			get
			{
				return this._User_AuthorID;
			}
			set
			{
				if ((this._User_AuthorID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_AuthorIDChanging(value);
					this.SendPropertyChanging();
					this._User_AuthorID = value;
					this.SendPropertyChanged("User_AuthorID");
					this.OnUser_AuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeID", DbType="TinyInt NOT NULL")]
		public byte ArticleTypeID
		{
			get
			{
				return this._ArticleTypeID;
			}
			set
			{
				if ((this._ArticleTypeID != value))
				{
					if (this._ArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeID = value;
					this.SendPropertyChanged("ArticleTypeID");
					this.OnArticleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summery", DbType="VarChar(MAX)")]
		public string Summery
		{
			get
			{
				return this._Summery;
			}
			set
			{
				if ((this._Summery != value))
				{
					this.OnSummeryChanging(value);
					this.SendPropertyChanging();
					this._Summery = value;
					this.SendPropertyChanged("Summery");
					this.OnSummeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="VarChar(MAX)")]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalSpecification", DbType="VarChar(MAX)")]
		public string TechnicalSpecification
		{
			get
			{
				return this._TechnicalSpecification;
			}
			set
			{
				if ((this._TechnicalSpecification != value))
				{
					this.OnTechnicalSpecificationChanging(value);
					this.SendPropertyChanging();
					this._TechnicalSpecification = value;
					this.SendPropertyChanged("TechnicalSpecification");
					this.OnTechnicalSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime NOT NULL")]
		public System.DateTime UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPublishDate
		{
			get
			{
				return this._LastPublishDate;
			}
			set
			{
				if ((this._LastPublishDate != value))
				{
					this.OnLastPublishDateChanging(value);
					this.SendPropertyChanging();
					this._LastPublishDate = value;
					this.SendPropertyChanged("LastPublishDate");
					this.OnLastPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDraft", DbType="Bit NOT NULL")]
		public bool IsDraft
		{
			get
			{
				return this._IsDraft;
			}
			set
			{
				if ((this._IsDraft != value))
				{
					this.OnIsDraftChanging(value);
					this.SendPropertyChanging();
					this._IsDraft = value;
					this.SendPropertyChanged("IsDraft");
					this.OnIsDraftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeToRead", DbType="SmallInt")]
		public System.Nullable<short> TimeToRead
		{
			get
			{
				return this._TimeToRead;
			}
			set
			{
				if ((this._TimeToRead != value))
				{
					this.OnTimeToReadChanging(value);
					this.SendPropertyChanging();
					this._TimeToRead = value;
					this.SendPropertyChanged("TimeToRead");
					this.OnTimeToReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_PreID", DbType="Int")]
		public System.Nullable<int> Article_PreID
		{
			get
			{
				return this._Article_PreID;
			}
			set
			{
				if ((this._Article_PreID != value))
				{
					if (this._Article4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticle_PreIDChanging(value);
					this.SendPropertyChanging();
					this._Article_PreID = value;
					this.SendPropertyChanged("Article_PreID");
					this.OnArticle_PreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_NextID", DbType="Int")]
		public System.Nullable<int> Article_NextID
		{
			get
			{
				return this._Article_NextID;
			}
			set
			{
				if ((this._Article_NextID != value))
				{
					if (this._Article3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticle_NextIDChanging(value);
					this.SendPropertyChanging();
					this._Article_NextID = value;
					this.SendPropertyChanged("Article_NextID");
					this.OnArticle_NextIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_CloneID", DbType="Int")]
		public System.Nullable<int> Article_CloneID
		{
			get
			{
				return this._Article_CloneID;
			}
			set
			{
				if ((this._Article_CloneID != value))
				{
					if (this._Article2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticle_CloneIDChanging(value);
					this.SendPropertyChanging();
					this._Article_CloneID = value;
					this.SendPropertyChanged("Article_CloneID");
					this.OnArticle_CloneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="BigInt")]
		public System.Nullable<long> Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_LastEditID", DbType="Int")]
		public System.Nullable<int> User_LastEditID
		{
			get
			{
				return this._User_LastEditID;
			}
			set
			{
				if ((this._User_LastEditID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_LastEditIDChanging(value);
					this.SendPropertyChanging();
					this._User_LastEditID = value;
					this.SendPropertyChanged("User_LastEditID");
					this.OnUser_LastEditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FragmentedText", DbType="VarChar(MAX)")]
		public string FragmentedText
		{
			get
			{
				return this._FragmentedText;
			}
			set
			{
				if ((this._FragmentedText != value))
				{
					this.OnFragmentedTextChanging(value);
					this.SendPropertyChanging();
					this._FragmentedText = value;
					this.SendPropertyChanged("FragmentedText");
					this.OnFragmentedTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breadcrumbs", DbType="VarChar(1000)")]
		public string Breadcrumbs
		{
			get
			{
				return this._Breadcrumbs;
			}
			set
			{
				if ((this._Breadcrumbs != value))
				{
					this.OnBreadcrumbsChanging(value);
					this.SendPropertyChanging();
					this._Breadcrumbs = value;
					this.SendPropertyChanged("Breadcrumbs");
					this.OnBreadcrumbsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Refrences", DbType="VarChar(MAX)")]
		public string Refrences
		{
			get
			{
				return this._Refrences;
			}
			set
			{
				if ((this._Refrences != value))
				{
					this.OnRefrencesChanging(value);
					this.SendPropertyChanging();
					this._Refrences = value;
					this.SendPropertyChanged("Refrences");
					this.OnRefrencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit NOT NULL")]
		public bool Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this.OnEnableChanging(value);
					this.SendPropertyChanging();
					this._Enable = value;
					this.SendPropertyChanged("Enable");
					this.OnEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Comment", Storage="_Comments", ThisKey="ID", OtherKey="ArticleID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_UserViewHistory", Storage="_UserViewHistories", ThisKey="ID", OtherKey="ArticleID")]
		public EntitySet<UserViewHistory> UserViewHistories
		{
			get
			{
				return this._UserViewHistories;
			}
			set
			{
				this._UserViewHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article", Storage="_Articles", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article1", Storage="_Articles1", ThisKey="ID", OtherKey="Article_CloneID")]
		public EntitySet<Article> Articles1
		{
			get
			{
				return this._Articles1;
			}
			set
			{
				this._Articles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article2", Storage="_Articles2", ThisKey="ID", OtherKey="Article_NextID")]
		public EntitySet<Article> Articles2
		{
			get
			{
				return this._Articles2;
			}
			set
			{
				this._Articles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article3", Storage="_Articles3", ThisKey="ID", OtherKey="Article_PreID")]
		public EntitySet<Article> Articles3
		{
			get
			{
				return this._Articles3;
			}
			set
			{
				this._Articles3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article", Storage="_Article1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Article Article1
		{
			get
			{
				return this._Article1.Entity;
			}
			set
			{
				Article previousValue = this._Article1.Entity;
				if (((previousValue != value) 
							|| (this._Article1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article1.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._Article1.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Article1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article1", Storage="_Article2", ThisKey="Article_CloneID", OtherKey="ID", IsForeignKey=true)]
		public Article Article2
		{
			get
			{
				return this._Article2.Entity;
			}
			set
			{
				Article previousValue = this._Article2.Entity;
				if (((previousValue != value) 
							|| (this._Article2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article2.Entity = null;
						previousValue.Articles1.Remove(this);
					}
					this._Article2.Entity = value;
					if ((value != null))
					{
						value.Articles1.Add(this);
						this._Article_CloneID = value.ID;
					}
					else
					{
						this._Article_CloneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Article2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article2", Storage="_Article3", ThisKey="Article_NextID", OtherKey="ID", IsForeignKey=true)]
		public Article Article3
		{
			get
			{
				return this._Article3.Entity;
			}
			set
			{
				Article previousValue = this._Article3.Entity;
				if (((previousValue != value) 
							|| (this._Article3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article3.Entity = null;
						previousValue.Articles2.Remove(this);
					}
					this._Article3.Entity = value;
					if ((value != null))
					{
						value.Articles2.Add(this);
						this._Article_NextID = value.ID;
					}
					else
					{
						this._Article_NextID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Article3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article3", Storage="_Article4", ThisKey="Article_PreID", OtherKey="ID", IsForeignKey=true)]
		public Article Article4
		{
			get
			{
				return this._Article4.Entity;
			}
			set
			{
				Article previousValue = this._Article4.Entity;
				if (((previousValue != value) 
							|| (this._Article4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article4.Entity = null;
						previousValue.Articles3.Remove(this);
					}
					this._Article4.Entity = value;
					if ((value != null))
					{
						value.Articles3.Add(this);
						this._Article_PreID = value.ID;
					}
					else
					{
						this._Article_PreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Article4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleType_Article", Storage="_ArticleType", ThisKey="ArticleTypeID", OtherKey="ID", IsForeignKey=true)]
		public ArticleType ArticleType
		{
			get
			{
				return this._ArticleType.Entity;
			}
			set
			{
				ArticleType previousValue = this._ArticleType.Entity;
				if (((previousValue != value) 
							|| (this._ArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleType.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._ArticleType.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._ArticleTypeID = value.ID;
					}
					else
					{
						this._ArticleTypeID = default(byte);
					}
					this.SendPropertyChanged("ArticleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Article", Storage="_User", ThisKey="User_AuthorID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._User_AuthorID = value.ID;
					}
					else
					{
						this._User_AuthorID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Article1", Storage="_User1", ThisKey="User_LastEditID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Articles1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Articles1.Add(this);
						this._User_LastEditID = value.ID;
					}
					else
					{
						this._User_LastEditID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_UserViewHistories(UserViewHistory entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_UserViewHistories(UserViewHistory entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Article1 = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Article1 = null;
		}
		
		private void attach_Articles1(Article entity)
		{
			this.SendPropertyChanging();
			entity.Article2 = this;
		}
		
		private void detach_Articles1(Article entity)
		{
			this.SendPropertyChanging();
			entity.Article2 = null;
		}
		
		private void attach_Articles2(Article entity)
		{
			this.SendPropertyChanging();
			entity.Article3 = this;
		}
		
		private void detach_Articles2(Article entity)
		{
			this.SendPropertyChanging();
			entity.Article3 = null;
		}
		
		private void attach_Articles3(Article entity)
		{
			this.SendPropertyChanging();
			entity.Article4 = this;
		}
		
		private void detach_Articles3(Article entity)
		{
			this.SendPropertyChanging();
			entity.Article4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductRequest")]
	public partial class ProductRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FullName;
		
		private long _Mobile;
		
		private string _Product;
		
		private string _Description;
		
		private System.DateTime _Date;
		
		private bool _IsReplied;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnMobileChanging(long value);
    partial void OnMobileChanged();
    partial void OnProductChanging(string value);
    partial void OnProductChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIsRepliedChanging(bool value);
    partial void OnIsRepliedChanged();
    #endregion
		
		public ProductRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="BigInt NOT NULL")]
		public long Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplied", DbType="Bit NOT NULL")]
		public bool IsReplied
		{
			get
			{
				return this._IsReplied;
			}
			set
			{
				if ((this._IsReplied != value))
				{
					this.OnIsRepliedChanging(value);
					this.SendPropertyChanging();
					this._IsReplied = value;
					this.SendPropertyChanged("IsReplied");
					this.OnIsRepliedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewAllTree")]
	public partial class ViewAllTree
	{
		
		private string _Trees;
		
		public ViewAllTree()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trees", DbType="NVarChar(MAX)")]
		public string Trees
		{
			get
			{
				return this._Trees;
			}
			set
			{
				if ((this._Trees != value))
				{
					this._Trees = value;
				}
			}
		}
	}
	
	public partial class GetChiledNodeResult
	{
		
		private System.Guid _stream_id;
		
		private string _directory;
		
		private string _name;
		
		private System.Nullable<long> _cached_file_size;
		
		private System.Nullable<System.DateTime> _creation_time;
		
		private bool _is_directory;
		
		public GetChiledNodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stream_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid stream_id
		{
			get
			{
				return this._stream_id;
			}
			set
			{
				if ((this._stream_id != value))
				{
					this._stream_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directory", DbType="NVarChar(MAX)")]
		public string directory
		{
			get
			{
				return this._directory;
			}
			set
			{
				if ((this._directory != value))
				{
					this._directory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cached_file_size", DbType="BigInt")]
		public System.Nullable<long> cached_file_size
		{
			get
			{
				return this._cached_file_size;
			}
			set
			{
				if ((this._cached_file_size != value))
				{
					this._cached_file_size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creation_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> creation_time
		{
			get
			{
				return this._creation_time;
			}
			set
			{
				if ((this._creation_time != value))
				{
					this._creation_time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_directory", DbType="Bit NOT NULL")]
		public bool is_directory
		{
			get
			{
				return this._is_directory;
			}
			set
			{
				if ((this._is_directory != value))
				{
					this._is_directory = value;
				}
			}
		}
	}
	
	public partial class GetFiesAncestorResult
	{
		
		private System.Nullable<short> _Level;
		
		private string _name;
		
		private System.Guid _stream_id;
		
		public GetFiesAncestorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="SmallInt")]
		public System.Nullable<short> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stream_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid stream_id
		{
			get
			{
				return this._stream_id;
			}
			set
			{
				if ((this._stream_id != value))
				{
					this._stream_id = value;
				}
			}
		}
	}
	
	public partial class Clone_ArticleResult
	{
		
		private System.Nullable<int> _Article_CloneID;
		
		public Clone_ArticleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_CloneID", DbType="Int")]
		public System.Nullable<int> Article_CloneID
		{
			get
			{
				return this._Article_CloneID;
			}
			set
			{
				if ((this._Article_CloneID != value))
				{
					this._Article_CloneID = value;
				}
			}
		}
	}
	
	public partial class GetArticleAncestorResult
	{
		
		private System.Nullable<short> _Level;
		
		private int _ID;
		
		private string _Name;
		
		public GetArticleAncestorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="SmallInt")]
		public System.Nullable<short> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class CommentPaginationResult
	{
		
		private int _Cmnt_ID;
		
		private int _cmnt_ArticleID;
		
		private int _cmnt_UserID;
		
		private string _cmnt_FullName;
		
		private string _cmnt_UserImage;
		
		private System.DateTime _cmnt_Date;
		
		private string _cmnt_Description;
		
		private bool _cmnt_IsConfirm;
		
		private int _cmnt_AdminOrPublisher;
		
		private System.Nullable<int> _reply_ID;
		
		private System.Nullable<int> _reply_ArticleID;
		
		private System.Nullable<int> _reply_UserID;
		
		private System.Nullable<System.DateTime> _reply_Date;
		
		private string _reply_Description;
		
		private System.Nullable<bool> _reply_IsConfirm;
		
		private int _reply_AdminOrPublisher;
		
		public CommentPaginationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cmnt_ID", DbType="Int NOT NULL")]
		public int Cmnt_ID
		{
			get
			{
				return this._Cmnt_ID;
			}
			set
			{
				if ((this._Cmnt_ID != value))
				{
					this._Cmnt_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmnt_ArticleID", DbType="Int NOT NULL")]
		public int cmnt_ArticleID
		{
			get
			{
				return this._cmnt_ArticleID;
			}
			set
			{
				if ((this._cmnt_ArticleID != value))
				{
					this._cmnt_ArticleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmnt_UserID", DbType="Int NOT NULL")]
		public int cmnt_UserID
		{
			get
			{
				return this._cmnt_UserID;
			}
			set
			{
				if ((this._cmnt_UserID != value))
				{
					this._cmnt_UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmnt_FullName", DbType="VarChar(201) NOT NULL", CanBeNull=false)]
		public string cmnt_FullName
		{
			get
			{
				return this._cmnt_FullName;
			}
			set
			{
				if ((this._cmnt_FullName != value))
				{
					this._cmnt_FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmnt_UserImage", DbType="NVarChar(MAX)")]
		public string cmnt_UserImage
		{
			get
			{
				return this._cmnt_UserImage;
			}
			set
			{
				if ((this._cmnt_UserImage != value))
				{
					this._cmnt_UserImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmnt_Date", DbType="DateTime NOT NULL")]
		public System.DateTime cmnt_Date
		{
			get
			{
				return this._cmnt_Date;
			}
			set
			{
				if ((this._cmnt_Date != value))
				{
					this._cmnt_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmnt_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string cmnt_Description
		{
			get
			{
				return this._cmnt_Description;
			}
			set
			{
				if ((this._cmnt_Description != value))
				{
					this._cmnt_Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmnt_IsConfirm", DbType="Bit NOT NULL")]
		public bool cmnt_IsConfirm
		{
			get
			{
				return this._cmnt_IsConfirm;
			}
			set
			{
				if ((this._cmnt_IsConfirm != value))
				{
					this._cmnt_IsConfirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmnt_AdminOrPublisher", DbType="Int NOT NULL")]
		public int cmnt_AdminOrPublisher
		{
			get
			{
				return this._cmnt_AdminOrPublisher;
			}
			set
			{
				if ((this._cmnt_AdminOrPublisher != value))
				{
					this._cmnt_AdminOrPublisher = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply_ID", DbType="Int")]
		public System.Nullable<int> reply_ID
		{
			get
			{
				return this._reply_ID;
			}
			set
			{
				if ((this._reply_ID != value))
				{
					this._reply_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply_ArticleID", DbType="Int")]
		public System.Nullable<int> reply_ArticleID
		{
			get
			{
				return this._reply_ArticleID;
			}
			set
			{
				if ((this._reply_ArticleID != value))
				{
					this._reply_ArticleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply_UserID", DbType="Int")]
		public System.Nullable<int> reply_UserID
		{
			get
			{
				return this._reply_UserID;
			}
			set
			{
				if ((this._reply_UserID != value))
				{
					this._reply_UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> reply_Date
		{
			get
			{
				return this._reply_Date;
			}
			set
			{
				if ((this._reply_Date != value))
				{
					this._reply_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply_Description", DbType="VarChar(MAX)")]
		public string reply_Description
		{
			get
			{
				return this._reply_Description;
			}
			set
			{
				if ((this._reply_Description != value))
				{
					this._reply_Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply_IsConfirm", DbType="Bit")]
		public System.Nullable<bool> reply_IsConfirm
		{
			get
			{
				return this._reply_IsConfirm;
			}
			set
			{
				if ((this._reply_IsConfirm != value))
				{
					this._reply_IsConfirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply_AdminOrPublisher", DbType="Int NOT NULL")]
		public int reply_AdminOrPublisher
		{
			get
			{
				return this._reply_AdminOrPublisher;
			}
			set
			{
				if ((this._reply_AdminOrPublisher != value))
				{
					this._reply_AdminOrPublisher = value;
				}
			}
		}
	}
	
	public partial class ArticleSearchResult
	{
		
		private int _ID;
		
		private System.Nullable<int> _Rank;
		
		public ArticleSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
	}
	
	public partial class ArticlePaginationResult
	{
		
		private int _ID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Name;
		
		private string _Summery;
		
		private string _AuthorName;
		
		private System.DateTime _UploadDate;
		
		private System.Nullable<long> _Views;
		
		private System.Nullable<int> _ParentChildCount;
		
		private byte _ArticleTypeID;
		
		private System.Nullable<int> _Rows;
		
		public ArticlePaginationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summery", DbType="VarChar(MAX)")]
		public string Summery
		{
			get
			{
				return this._Summery;
			}
			set
			{
				if ((this._Summery != value))
				{
					this._Summery = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="VarChar(201) NOT NULL", CanBeNull=false)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this._AuthorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime NOT NULL")]
		public System.DateTime UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this._UploadDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="BigInt")]
		public System.Nullable<long> Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this._Views = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentChildCount", DbType="Int")]
		public System.Nullable<int> ParentChildCount
		{
			get
			{
				return this._ParentChildCount;
			}
			set
			{
				if ((this._ParentChildCount != value))
				{
					this._ParentChildCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeID", DbType="TinyInt NOT NULL")]
		public byte ArticleTypeID
		{
			get
			{
				return this._ArticleTypeID;
			}
			set
			{
				if ((this._ArticleTypeID != value))
				{
					this._ArticleTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rows", DbType="Int")]
		public System.Nullable<int> Rows
		{
			get
			{
				return this._Rows;
			}
			set
			{
				if ((this._Rows != value))
				{
					this._Rows = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
